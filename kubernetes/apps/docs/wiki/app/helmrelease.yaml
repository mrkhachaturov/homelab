---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app wiki
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      wiki:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          01-init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: wiki-initdb-secret

          02-fix-permissions:
            image:
              repository: ghcr.io/requarks/wiki
              tag: 2.5.307@sha256:a1ac7c317a52c80da0bfc5ee57b4f009b22ed322569e435f52c57c2f24c70d8a
            command: ["sh", "-c", "chown -R node:node /wiki/data/repo /wiki/data/cache /wiki/data/uploads && git config --global --add safe.directory /wiki/data/repo"]
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              readOnlyRootFilesystem: false

        containers:
          app:
            image:
              repository: ghcr.io/requarks/wiki
              tag: 2.5.307@sha256:a1ac7c317a52c80da0bfc5ee57b4f009b22ed322569e435f52c57c2f24c70d8a
            env: &env
              TZ: Europe/Moscow
              DB_TYPE: postgres
              DB_HOST:
                valueFrom:
                  secretKeyRef:
                    name: &pguser wiki-pguser-secret
                    key: host
              DB_PORT:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: port
              DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: user
              DB_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: password
              DB_NAME:
                valueFrom:
                  secretKeyRef:
                    name: *pguser
                    key: db
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 5m
                memory: 50Mi
              limits:
                memory: 500Mi
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 3000

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.mrk.am"
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      repo:
        existingClaim: wiki
        globalMounts:
          - path: /wiki/data/repo
      cache:
        existingClaim: wiki-cache
        globalMounts:
          - path: /wiki/data/cache
      uploads:
        type: emptyDir
        globalMounts:
          - path: /wiki/data/uploads