---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: rook-ceph-cluster
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: v1.17.4
  url: oci://ghcr.io/rook/rook-ceph-cluster
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 1h
  timeout: 15m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    configOverride: |
      [global]
      osd_pool_default_size = 1
    monitoring:
      enabled: false
      createPrometheusRules: true
    toolbox:
      enabled: true
    cephClusterSpec:
      cephConfig:
        global:
          osd_pool_default_size: "1"
          mon_warn_on_pool_no_redundancy: "false"
          bdev_flock_retry: "20"
          bluefs_buffered_io: "false"
          mon_data_avail_warn: "10"
      crashCollector:
        disable: true
      cleanupPolicy:
        confirmation: ""
      csi:
        readAffinity:
          enabled: true
      removeOSDsIfOutAndSafeToRemove: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mon:
        count: 1
        allowMultiplePerNode: true
      skipUpgradeChecks: true
      mgr:
        count: 1
        allowMultiplePerNode: true
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: true
        useAllDevices: false
        devices:
            - name: "/dev/disk/by-id/nvme-KINGSTON_SNV2S1000G_50026B7785AACA55"
        allowOsdCrushWeightUpdate: false
        config:
          osdsPerDevice: "1"
      disruptionManagement:
        managePodBudgets: false
        osdMaintenanceTimeout: 30
        manageMachineDisruptionBudgets: false
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 1
            requireSafeReplicaSize: false
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            compression_mode: aggressive
            compression_algorithm: zstd
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    # NOTE: After disabling the filesystem, the filesystem can be removed with the following commands:
    # ceph fs fail ceph-filesystem && ceph fs rm ceph-filesystem --yes-i-really-mean-it
    cephFileSystems: []
    cephObjectStores: []
